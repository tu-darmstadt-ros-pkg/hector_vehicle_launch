<?xml version="1.0"?>
<launch>
  <arg name="update_rate" default="1"/>
  <arg name="cloud_topic" default="/depth_combined"/>
  <arg name="duration" value="$(eval 1.0 / arg('update_rate'))"/>

  <node name="esdf_server" pkg="voxblox_ros" type="esdf_server" output="screen" clear_params="true" respawn="true">
    <rosparam file="$(find hector_sensor_proc_launch)/config/voxblox_common_config.yaml" command="load" />

    <param name="publish_esdf_map" value="true" />
    <param name="update_mesh_every_n_sec" value="$(arg duration)" /> <!-- compute and publish mesh -->
    <param name="update_esdf_every_n_sec" value="$(arg duration)" /> <!-- compute esdf -->
    <param name="publish_map_every_n_sec" value="$(arg duration)" /> <!-- publish esdf -->

    <param name="min_time_between_msgs_sec" value="0.0" />
    <param name="verbose" value="false" />
    <param name="color_mode" value="normals" /> <!-- normals, color -->

    <param name="method" value="fast" /> <!-- simple, fast, merged -->
<!--     <param name="max_integration_time_s" value="3" /> -->
    <param name="start_voxel_subsampling_factor" value="1" />

    <param name="use_const_weight" value="false" />

    <param name="voxel_carving_enabled" value="true" />
    <param name="truncation_distance" value="0.4" />

    <param name="min_ray_length_m" value="0.0" />

    <param name="publish_slices" value="false" />

    <param name="pointcloud_queue_size" value="20"/>
    <remap from="pointcloud" to="$(arg cloud_topic)"/>
  </node>

    <!-- Throttle RGBD for voxblox (lazy) -->
  <node pkg="nodelet" type="nodelet" name="front_rgbd_cam_depth_throttle_more" output="screen" respawn="true" args="load hector_nodelet_topic_tools/NodeletThrottlePointcloud /front_rgbd_cam/front_rgbd_cam_nodelet_manager">
    <param name="update_rate" value="$(arg update_rate)"/>
    <remap from="/front_rgbd_cam/topic_in" to="/front_rgbd_cam/depth/color/points"/>
    <remap from="/front_rgbd_cam/topic_out" to="/front_rgbd_cam/depth/color/points_throttle_1hz"/>
  </node>

  <node pkg="nodelet" type="nodelet" name="back_rgbd_cam_depth_throttle_more" output="screen" respawn="true" args="load hector_nodelet_topic_tools/NodeletThrottlePointcloud /back_rgbd_cam/back_rgbd_cam_nodelet_manager">
    <param name="update_rate" value="$(arg update_rate)"/>
    <remap from="/back_rgbd_cam/topic_in" to="/back_rgbd_cam/depth/color/points"/>
    <remap from="/back_rgbd_cam/topic_out" to="/back_rgbd_cam/depth/color/points_throttle_1hz"/>
  </node>

  <!-- Crop Box to filter out flippers-->
  <node pkg="nodelet" type="nodelet" name="front_rgbd_cam_depth_range_cutoff" output="screen" respawn="true" args="load pcl/CropBox /front_rgbd_cam/front_rgbd_cam_nodelet_manager">
    <param name="min_x" value="-0.65"/>
    <param name="max_x" value="0.65"/>
    <param name="min_y" value="-0.3"/>
    <param name="max_y" value="0.3"/>
    <param name="min_z" value="-0.3"/>
    <param name="max_z" value="0.7"/>
    <param name="keep_organized" value="false"/>
    <param name="negative" value="true"/>
    <param name="input_frame" value="base_link"/>
    <param name="output_frame" value="front_rgbd_cam_depth_optical_frame"/>
    <remap from="~input" to="/front_rgbd_cam/depth/color/points_throttle_1hz"/>
    <remap from="~output" to="/front_rgbd_cam/depth/color/points_throttle_1hz_cropped"/>
  </node>

  <node pkg="nodelet" type="nodelet" name="back_rgbd_cam_depth_range_cutoff" output="screen" respawn="true" args="load pcl/CropBox /back_rgbd_cam/back_rgbd_cam_nodelet_manager">
    <param name="min_x" value="-0.65"/>
    <param name="max_x" value="0.65"/>
    <param name="min_y" value="-0.3"/>
    <param name="max_y" value="0.3"/>
    <param name="min_z" value="-0.3"/>
    <param name="max_z" value="0.7"/>
    <param name="keep_organized" value="false"/>
    <param name="negative" value="true"/>
    <param name="input_frame" value="base_link"/>
    <param name="output_frame" value="back_rgbd_cam_depth_optical_frame"/>
    <remap from="~input" to="/back_rgbd_cam/depth/color/points_throttle_1hz"/>
    <remap from="~output" to="/back_rgbd_cam/depth/color/points_throttle_1hz_cropped"/>
  </node>

  <!-- Relay RGBD cams to common topic -->
  <node name="front_depth_relay" pkg="topic_tools" type="relay" args="/front_rgbd_cam/depth/color/points_throttle_1hz_cropped /depth_combined">
    <param name="lazy" value="true"/>
  </node>

  <node name="back_depth_relay" pkg="topic_tools" type="relay" args="/back_rgbd_cam/depth/color/points_throttle_1hz_cropped /depth_combined">
    <param name="lazy" value="true"/>
  </node>
</launch>
